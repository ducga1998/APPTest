{"version":3,"sources":["webpack://WebBuilder/./src/elements/SpanElement.tsx","webpack://WebBuilder/./src/lib/element.tsx","webpack://WebBuilder/./src/ui/control/UIInput.tsx"],"names":["DIV","styled","div","CreateElement","initialState","SpanElement","e","props","Event","onmousedown","container","setStateSync","data","text","ElementSpan","innerText","element","current","componentDidMount","innerHTML","state","componentDidUpdate","nextProps","render","id","type","HandChange","bind","listComponent","getParent","removeElement","Elements","WrapperElement","constructor","SelectedContainer","setState","selected","display","ArrayElement","inspector","containerState","A","containerElement","InspectorA","console","log","onMouseDown","HandMouseDown","ref","styledRefs","draggable","Field","UIInput","flag","value","link","target"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import * as React from 'react'\nimport UIElement from \"../interfaces/UIElement\";\nimport { Provider, Subscribe ,Container} from 'unstated-x'\nimport { CreateElement } from '../lib/element';\nimport { RefObject, Component } from 'react';\nimport UIInput from '../ui/control/UIInput';\nimport styled from 'styled-components'\nconst DIV = styled.div `\n`\n\ninterface Data {\n    Event:any,\n    container: any,\n    text :string,\n    data: Array<{\n        id:number,\n        type:string,\n        text : any\n    }>,\n    id : any,\n    type : any,\n    abc:any\n}\nexport default CreateElement({initialState:{\n\n}})\n(   class SpanElement extends React.Component<Data> implements UIElement{\n      \n    static defaultProps = {\n        text:  'span SCASC'\n    }\n    static inspector =  () => {\n        return {\n            listComponent : [\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput\n        ]}\n    }\n    get container(){\n        return this.props.container;\n    }\n\n    get data () {\n        return this.props.data\n    }\n\n    get ElementSpan() {\n       \n        return this.element.current\n    }\n\n    componentDidMount() {\n        this.ElementSpan.innerHTML = this.container.state.data.text\n    }\n\n    componentDidUpdate(nextProps: {\n\t\ttext: string\n\t}) {\n       \n        this.ElementSpan.innerHTML =this.container.state.data.text;\n\t}\n    element : RefObject<HTMLDivElement> = React.createRef();\n    handClick  = (e) => {\n        this.props.Event.onmousedown();\n    }   \n    HandChange = () => {\n        this.container.setStateSync({\n            data : {\n                text :this.ElementSpan.innerText\n            }\n        })\n        // this.data.filter(item => item.id == this.props.id)[0].text = this.ElementSpan.innerText\n    }\n    \n    render(){\n      \n        const { text , container ,data ,id,type} = this.props;\n        return <DIV   {...this.props.Event}  id = \"cascas\">\n            <span\n\t          \n\t            ref={(this.element)}\n                onInput={ this.HandChange.bind(this)}\n                onBlur={ this.HandChange.bind(this)}\n\t            contentEditable={true}\n                />\n            </DIV>\n    }\n}\n)\n","import UIElement from '../interfaces/UIElement'\nimport * as React from 'react'\nimport { Component ,RefObject} from 'react';\nimport { Subscribe ,Container} from 'unstated-x'\nimport { SelectedContainer } from \"../store/SelectedContainer\";\nimport Inspector from '../../pagefly-client/src/shared/inspectors/index';\n\nexport async function getParent(): Promise<UIElement> {\n\t// Do whatever shit to find its parent\n\treturn null\n}\n\nexport async function removeElement(): Promise<boolean> {\n\t// Do whatever shit to remove element\n\treturn true\n}\n\n// handle Element \n\nexport const CreateElement = ({initialState}) => (Elements : any) =>\n{ \n\treturn  class WrapperElement extends Component<any,any>\n\t{\n\t\tDOMNodeRef: RefObject<HTMLElement> = React.createRef()\n\t\telementRef: RefObject<Component> = React.createRef()\n\t\tstyledRefs: RefObject<Component> = React.createRef()\n\t\t \tcontainer : any;\n\t\t\tconstructor(props){\n\t\t\t\tsuper(props);\n\t\t\t\tlet ArrayElement;\n\t\t\t\t\n\t\t\t\tthis.state = {\n\t\t\t\t\t...initialState\n\t\t\t\t}\n\t\t\t\tif(Elements.inspector)\n\t\t\t\t{\n\t\t\t\t\tArrayElement  =  Elements.inspector();\n\t\t\t\t}\n\t\t\t\n\t\t\t\tconst containerState = {\n\t\t\t\t\t...this.state,\n\t\t\t\t\t...ArrayElement,\n\t\t\t\t}\n\t\t\t\tconst A = this.props.containerElement\n\t\t\t\tA.state = { ...A.state , ...containerState}\n\t\t\t\tthis.container = A;\n\n\t\t\t}\n\t\t\tstatic get InspectorA(){\n\t\t\t\treturn Elements.inspector();\n\t\t\t}\n\t\t\t\n\t\t\tcomponentDidMount() {\n\t\t\t\t// setState   in element  has been overide setStateSync in container \n\t\t\t\tthis.element.current.setState = this.container.setStateSync.bind(this.container)\n\t\t\t\t//   a bit later. inside Element, We call setState and this a here, it don't point this class a here\n\t\t\t}\n\n\t\t\telement: RefObject<Component> = React.createRef();\n\t\t\tHandMouseDown = () => {\n\t\t\t\tSelectedContainer.setState({selected: this, display: true})\n\t\t\t}\n\t\t\trender(){\n\t\t\t\treturn (\n\t\t\t\t\t<Subscribe to={[this.container]}>\n\t\t\t\t\t{\n\t\t\t\t\t\tcontainer => {\n\t\t\t\t\t\t\tconsole.log(\"Test Props \" , this.props)\n\t\t\t\t\t\t\tconsole.log(\"csacascasc\", container)\n\t\t\t\t\t\t\treturn  <Elements Event = { \n\t\t\t\t\t\t\t\t\t{ onMouseDown : this.HandMouseDown,\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tref: this.styledRefs,\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...this.props}  \n\t\t\t\t\t\t\t\t\tstate = {this.state} ref = {this.element} container = {container}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t</Subscribe>\n\t\t\t    )\t\n\t\t\t\t\n \t\t\t\t\n\t\t\t}\n\t\t}\n}\n","import * as React from 'react'\nimport UIControl from '../../interfaces/UIControl'\n\n\nimport styled from 'styled-components' \nconst Field = styled.div`\n    &{\n        margin: 20px;\n    }\n    input {\n        padding: 5px 10px;\n        display:block;\n       \n    }\n    input:focus{\n        border: 2px solid black;\n    }\n\n`\nexport default class UIInput \n    extends React.Component<any>\n    implements UIControl {\n    render() { \n        var flag = 'text'\n        const {value,container,bind } = this.props;\n        if(bind){\n            return (\n                <Field> Edit Text : <input value = {value}  onChange = {(e) => {\n                    console.log(flag)\n                    container.setStateSync({data : {\n                        link: e.target.value\n                    }})\n                 }} />\n                </Field>\n            )\n        }\n        else\n        {\n            return (\n                <Field> Edit Text : <input value = {value}  onChange = {(e) => {\n                    console.log(flag)\n                    container.setStateSync({data : {\n                        text: e.target.value\n                    }})\n                 }} />\n                </Field>\n            )\n        }\n        \n        \n}\n    }\n"],"sourceRoot":""}