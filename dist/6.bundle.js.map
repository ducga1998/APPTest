{"version":3,"sources":["webpack://WebBuilder/./src/elements/Button.tsx"],"names":["Span","styled","span","Button","button","CreateElement","initialState","e","props","Event","onmousedown","container","setStateSync","data","text","ElementSpan","innerText","element","current","componentDidMount","innerHTML","state","componentDidUpdate","nextProps","render","id","type","HandChange","bind","listComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;AAEA;AACA,MAAMA,OAAM,yDAAAC,CAAOC,IAAK,EAAxB;AACA,MAAMC,SAAQ,yDAAAF,CAAOG,MAAO,EAA5B;AAgBA,+DAAe,kEAAAC,CAAc;AAACC,gBAAa;AAAd,CAAd,oBAGX,MAAMH,MAAN,SAAqB,+CAArB,CAA+D;AAAA;AAAA;;AAAA,qCA+BzB,iDA/ByB;;AAAA,uCAgCjDI,CAAD,IAAO;AAChB,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,WAAjB;AACH,KAlC8D;;AAAA,wCAmClD,MAAM;AACf,WAAKC,SAAL,CAAeC,YAAf,CAA4B;AACxBC,cAAO;AACHC,gBAAM,KAAKC,WAAL,CAAiBC;AADpB;AADiB,OAA5B,EADe,CAMf;AACH,KA1C8D;AAAA;;AAY/D,MAAIL,SAAJ,GAAe;AACX,WAAO,KAAKH,KAAL,CAAWG,SAAlB;AACH;;AACD,MAAIE,IAAJ,GAAY;AACR,WAAO,KAAKL,KAAL,CAAWK,IAAlB;AACH;;AACD,MAAIE,WAAJ,GAAkB;AAEd,WAAO,KAAKE,OAAL,CAAaC,OAApB;AACH;;AACDC,sBAAoB;AAChB,SAAKJ,WAAL,CAAiBK,SAAjB,GAA6B,KAAKT,SAAL,CAAeU,KAAf,CAAqBR,IAArB,CAA0BC,IAAvD;AACH;;AACDQ,qBAAmBC,SAAnB,EAEA;AAEI,SAAKR,WAAL,CAAiBK,SAAjB,GAA4B,KAAKT,SAAL,CAAeU,KAAf,CAAqBR,IAArB,CAA0BC,IAAtD;AACN;;AAcEU,WAAQ;AAEJ,UAAM;AAAEV,UAAF;AAASH,eAAT;AAAoBE,UAApB;AAA0BY,QAA1B;AAA6BC;AAA7B,QAAqC,KAAKlB,KAAhD;AACA,WACA,oDAAC,8CAAD,QACQ;AAAQ,iBAAU;AAAlB,OAAuC,KAAKA,KAAL,CAAWC,KAAlD;AAAyD,UAAIgB;AAA7D,QACI,oDAAC,IAAD;AAAM,gBAAW,KAAKR,OAAtB;AACQ,eAAU,KAAKU,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CADlB;AAEQ,cAAS,KAAKD,UAAL,CAAgBC,IAAhB,CAAqB,IAArB;AAFjB,OAGY,KAAKpB,KAAL,CAAWC,KAHvB;AAIQ,uBAAiB;AAJzB,OADJ,CADR,CADA;AAcH;;AA7D8D,CAHpD,0CAKW;AAClBK,QAAO;AADW,CALX,wCAQS,MAAM;AACtB,SAAO;AACHe,mBAAgB,CACZ,2DADY;AADb,GAAP;AAKH,CAdU,UAAf,E","file":"6.bundle.js","sourcesContent":["import * as React from 'react'\nimport UIElement from \"../interfaces/UIElement\";\nimport { Provider, Subscribe ,Container} from 'unstated-x'\nimport { CreateElement } from '../lib/element';\nimport { RefObject, Component } from 'react';\nimport UIInput from '../ui/control/UIInput';\nimport Buttonssss from 'react-bootstrap/lib/Button';\nimport styled from 'styled-components'\nconst Span =styled.span``\nconst Button =styled.button``\ninterface Data {\n    Event:{\n        onmousedown:Function\n    },\n    container: any,\n    text :string,\n    data: Array<{\n        id:number,\n        type:string,\n        text : any\n    }>,\n    id : any,\n    type : any,\n    abc:any\n}\nexport default CreateElement({initialState:{\n\n}})\n(   class Button extends React.Component<Data> implements UIElement{\n      \n    static defaultProps = {\n        text:  'span SCASC'\n    }\n    static inspector =  () => {\n        return {\n            listComponent : [\n                UIInput,\n\n        ]}\n    }\n    get container(){\n        return this.props.container;\n    }\n    get data () {\n        return this.props.data\n    }\n    get ElementSpan() {\n       \n        return this.element.current\n    }\n    componentDidMount() {\n        this.ElementSpan.innerHTML = this.container.state.data.text\n    }\n    componentDidUpdate(nextProps: {\n\t\ttext: string\n\t}) {\n       \n        this.ElementSpan.innerHTML =this.container.state.data.text;\n\t}\n    element : RefObject<HTMLDivElement> = React.createRef();\n    handClick  = (e) => {\n        this.props.Event.onmousedown();\n    }   \n    HandChange = () => {\n        this.container.setStateSync({\n            data : {\n                text :this.ElementSpan.innerText\n            }\n        })\n        // this.data.filter(item => item.id == this.props.id)[0].text = this.ElementSpan.innerText\n    }\n    \n    render(){\n      \n        const { text , container ,data ,id,type} = this.props;\n        return (\n        <React.Fragment>\n                <button className=\"btn btn-danger\" {...this.props.Event} id={id} >\n                    <Span innerRef={(this.element)}\n                            onInput={ this.HandChange.bind(this)}\n                            onBlur={ this.HandChange.bind(this)}\n                            {...this.props.Event}\n                            contentEditable={true} \n                    /> \n                </button>\n            \n        </React.Fragment>\n        )\n\t\t\t\n    }\n}\n)\n"],"sourceRoot":""}