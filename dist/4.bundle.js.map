{"version":3,"sources":["webpack://WebBuilder/./src/elements/SpanElement.tsx"],"names":["DIV","styled","div","CreateElement","initialState","SpanElement","e","props","Event","onmousedown","container","setStateSync","data","text","ElementSpan","innerText","element","current","componentDidMount","innerHTML","state","componentDidUpdate","nextProps","render","id","type","HandChange","bind","listComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;AACA;AACA,MAAMA,MAAM,yDAAAC,CAAOC,GAAK;CAAxB;AAgBA,+DAAe,kEAAAC,CAAc;AAACC,gBAAa;AAAd,CAAd,oBAGX,MAAMC,WAAN,SAA0B,+CAA1B,CAAoE;AAAA;AAAA;;AAAA,qCAuC9B,iDAvC8B;;AAAA,uCAwCtDC,CAAD,IAAO;AAChB,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,WAAjB;AACH,KA1CmE;;AAAA,wCA2CvD,MAAM;AACf,WAAKC,SAAL,CAAeC,YAAf,CAA4B;AACxBC,cAAO;AACHC,gBAAM,KAAKC,WAAL,CAAiBC;AADpB;AADiB,OAA5B,EADe,CAMf;AACH,KAlDmE;AAAA;;AAgBpE,MAAIL,SAAJ,GAAe;AACX,WAAO,KAAKH,KAAL,CAAWG,SAAlB;AACH;;AAED,MAAIE,IAAJ,GAAY;AACR,WAAO,KAAKL,KAAL,CAAWK,IAAlB;AACH;;AAED,MAAIE,WAAJ,GAAkB;AAEd,WAAO,KAAKE,OAAL,CAAaC,OAApB;AACH;;AAEDC,sBAAoB;AAChB,SAAKJ,WAAL,CAAiBK,SAAjB,GAA6B,KAAKT,SAAL,CAAeU,KAAf,CAAqBR,IAArB,CAA0BC,IAAvD;AACH;;AAEDQ,qBAAmBC,SAAnB,EAEA;AAEI,SAAKR,WAAL,CAAiBK,SAAjB,GAA4B,KAAKT,SAAL,CAAeU,KAAf,CAAqBR,IAArB,CAA0BC,IAAtD;AACN;;AAcEU,WAAQ;AAEJ,UAAM;AAAEV,UAAF;AAASH,eAAT;AAAoBE,UAApB;AAA0BY,QAA1B;AAA6BC;AAA7B,QAAqC,KAAKlB,KAAhD;AACA,WAAO,oDAAC,GAAD,eAAW,KAAKA,KAAL,CAAWC,KAAtB;AAA8B,UAAK;AAAnC,QACH;AAEC,WAAM,KAAKQ,OAFZ;AAGI,eAAU,KAAKU,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAHd;AAII,cAAS,KAAKD,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAJb;AAKC,uBAAiB;AALlB,MADG,CAAP;AASH;;AAhEmE,CAHzD,0CAKW;AAClBd,QAAO;AADW,CALX,wCAQS,MAAM;AACtB,SAAO;AACHe,mBAAgB,CACZ,2DADY,EAEZ,2DAFY,EAGZ,2DAHY,EAIZ,2DAJY,EAKZ,2DALY,EAMZ,2DANY;AADb,GAAP;AASH,CAlBU,UAAf,E","file":"4.bundle.js","sourcesContent":["import * as React from 'react'\nimport UIElement from \"../interfaces/UIElement\";\nimport { Provider, Subscribe ,Container} from 'unstated-x'\nimport { CreateElement } from '../lib/element';\nimport { RefObject, Component } from 'react';\nimport UIInput from '../ui/control/UIInput';\nimport styled from 'styled-components'\nconst DIV = styled.div `\n`\n\ninterface Data {\n    Event:any,\n    container: any,\n    text :string,\n    data: Array<{\n        id:number,\n        type:string,\n        text : any\n    }>,\n    id : any,\n    type : any,\n    abc:any\n}\nexport default CreateElement({initialState:{\n\n}})\n(   class SpanElement extends React.Component<Data> implements UIElement{\n      \n    static defaultProps = {\n        text:  'span SCASC'\n    }\n    static inspector =  () => {\n        return {\n            listComponent : [\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput,\n                UIInput\n        ]}\n    }\n    get container(){\n        return this.props.container;\n    }\n\n    get data () {\n        return this.props.data\n    }\n\n    get ElementSpan() {\n       \n        return this.element.current\n    }\n\n    componentDidMount() {\n        this.ElementSpan.innerHTML = this.container.state.data.text\n    }\n\n    componentDidUpdate(nextProps: {\n\t\ttext: string\n\t}) {\n       \n        this.ElementSpan.innerHTML =this.container.state.data.text;\n\t}\n    element : RefObject<HTMLDivElement> = React.createRef();\n    handClick  = (e) => {\n        this.props.Event.onmousedown();\n    }   \n    HandChange = () => {\n        this.container.setStateSync({\n            data : {\n                text :this.ElementSpan.innerText\n            }\n        })\n        // this.data.filter(item => item.id == this.props.id)[0].text = this.ElementSpan.innerText\n    }\n    \n    render(){\n      \n        const { text , container ,data ,id,type} = this.props;\n        return <DIV   {...this.props.Event}  id = \"cascas\">\n            <span\n\t          \n\t            ref={(this.element)}\n                onInput={ this.HandChange.bind(this)}\n                onBlur={ this.HandChange.bind(this)}\n\t            contentEditable={true}\n                />\n            </DIV>\n    }\n}\n)\n"],"sourceRoot":""}